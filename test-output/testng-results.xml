<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12266" started-at="2022-10-11T19:14:25 CEST" finished-at="2022-10-11T19:14:37 CEST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12266" started-at="2022-10-11T19:14:25 CEST" finished-at="2022-10-11T19:14:37 CEST">
      <class name="tests.AdminCitiesTests">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="beforeClass" is-config="true" duration-ms="2469" started-at="2022-10-11T19:14:25 CEST" finished-at="2022-10-11T19:14:28 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="beforeMethod" is-config="true" duration-ms="973" started-at="2022-10-11T19:14:28 CEST" finished-at="2022-10-11T19:14:29 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="visitsTheAdminCitiesPageAndListCities()[pri:1, instance:tests.AdminCitiesTests@43bd930a]" name="visitsTheAdminCitiesPageAndListCities" duration-ms="1374" started-at="2022-10-11T19:14:29 CEST" finished-at="2022-10-11T19:14:30 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- visitsTheAdminCitiesPageAndListCities -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-11T19:14:30 CEST" finished-at="2022-10-11T19:14:30 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="beforeMethod" is-config="true" duration-ms="281" started-at="2022-10-11T19:14:30 CEST" finished-at="2022-10-11T19:14:30 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="editCity()[pri:4, instance:tests.AdminCitiesTests@43bd930a]" name="editCity" duration-ms="6165" started-at="2022-10-11T19:14:30 CEST" finished-at="2022-10-11T19:14:36 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editCity -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-11T19:14:36 CEST" finished-at="2022-10-11T19:14:36 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="beforeMethod" is-config="true" duration-ms="229" started-at="2022-10-11T19:14:36 CEST" finished-at="2022-10-11T19:14:37 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="deleteCity()[pri:5, instance:tests.AdminCitiesTests@43bd930a]" name="deleteCity" duration-ms="1" started-at="2022-10-11T19:14:37 CEST" finished-at="2022-10-11T19:14:37 CEST">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
Unhandled exception type InterruptedException
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
Unhandled exception type InterruptedException

at tests.AdminCitiesTests.deleteCity(AdminCitiesTests.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCity -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="afterClass" is-config="true" duration-ms="737" started-at="2022-10-11T19:14:37 CEST" finished-at="2022-10-11T19:14:37 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.AdminCitiesTests@43bd930a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-11T19:14:37 CEST" finished-at="2022-10-11T19:14:37 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.AdminCitiesTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
